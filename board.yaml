esphome:
  name: racktemp

esp8266:
  board: d1_mini

# TODO: make this thing go to sleep so I can run it off a battery.
# deep_sleep:
#   run_duration: 10s
#   sleep_duration: 1min

# Enable logging
logger:

# Enable Home Assistant API
# api:
  # password: "sdcsdc"

ota:
  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: !secret wifi_fallback_ssid
    password: !secret wifi_fallback_password

  # manual_ip:
  #   static_ip: 192.168.10.10
  #   gateway: 192.168.10.1
  #   subnet: 255.255.255.0

captive_portal:

i2c:
http_request:
  useragent: esphome/device
  timeout: 10s
sensor:
  - platform: bmp280
    address: 0x76
    update_interval: 60s
    temperature:
      id: rack
      name: "Temperature"
      oversampling: 16x

      # when we get a temp reading, make an http post request to influxdb
      on_value:
        then:
          - http_request.post:
              url: !secret influx_url
              headers:
                Authorization: !secret influx_token
              # a few lines of C code to generate the influxdb request data
              body: !lambda |-
                char buf[64];
                sprintf(buf, "%0.1f", id(rack).state);
                return ((std::string) "temperature,location=comms_closet temp_c="+buf).c_str();
